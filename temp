#include <bits/stdc++.h>

using namespace std;

void __print(int x) {cerr << x;}
void __print(long x) {cerr << x;}
void __print(long long x) {cerr << x;}
void __print(unsigned x) {cerr << x;}
void __print(unsigned long x) {cerr << x;}
void __print(unsigned long long x) {cerr << x;}
void __print(float x) {cerr << x;}
void __print(double x) {cerr << x;}
void __print(long double x) {cerr << x;}
void __print(char x) {cerr << '\'' << x << '\'';}
void __print(const char *x) {cerr << '\"' << x << '\"';}
void __print(const string &x) {cerr << '\"' << x << '\"';}
void __print(bool x) {cerr << (x ? "true" : "false");}

template<typename T, typename V>
void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}
template<typename T>
void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? "," : ""), __print(i); cerr << "}";}
void _print() {cerr << "]\n";}
template <typename T, typename... V>
void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << ", "; _print(v...);}
#ifndef ONLINE_JUDGE
#define debug(x...) cerr << "[" << #x << "] = ["; _print(x)
#else
#define debug(x...)
#endif
#define ll long long
#define endl "\n"
#define inf          INT_MAX
#define zer          INT_MIN
#define nl cout<<'\n' ; 
#define prec(n) fixed<<setprecision(n)

void speed() { ios_base::sync_with_stdio(false);cin.tie(NULL);}


void solve()
{
	string s ; cin>>s ;
	int n = s.size();
	
	vector<pair<int,int>> v ;
	int i=0 ;
	while(i<n){
		if( i+1 <n and s[i]=='1' and s[i+1]=='1'){
			v.push_back({i,i+1});
		}
		if(i+1<n and s[i]=='0' and s[i+1]=='0'){
			v.push_back({i,i+1});
		}
		else if(s[i]=='?'){
			int j = i ;
			while(j<n and s[j]=='?')j++ ;
			if(i-1>=0 and j<n){
				if((j-i)&1){
					if(s[i-1]!=s[j]){
						v.push_back({i-1,j});
						
					}
				}
				else{
					if(s[i-1]==s[j]){
						v.push_back({i-1,j});
					}
				}
			}
			i=j ;
			continue ;
		}
		i++ ;
	}
	
	sort(v.begin() , v.end());
	int prev = 0 ;
	ll ans = 0 ;
	for(auto it : v){
		ans-=(it.second-it.first-1)*(it.second-it.first)/2 ;
		ans+=(it.second - prev )*(it.second -prev + 1)/2 ;
		prev = it.first+1 ;
	}
	
	ans+=(n-1 - prev + 1)*(n-1 - prev + 1 + 1)/2 ;
	
	cout<<ans<<'\n' ;
	

	
	
	
}

int main()
{
	speed(); 
    int T = 1;
    cin >> T;
    while (T--){
    solve();
}
}
